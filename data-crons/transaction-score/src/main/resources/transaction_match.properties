read.transaction.spring.datasource.driverClassName=com.mysql.jdbc.Driver
read.transaction.spring.datasource.url=jdbc:mysql://localhost:3306/clout_cron?autoReconnect=true&failOverReadOnly=false&maxReconnects=10
read.transaction.spring.datasource.username=root
read.transaction.spring.datasource.password=root



read.store.spring.datasource.driverClassName=com.mysql.jdbc.Driver
read.store.spring.datasource.url=jdbc:mysql://localhost:3306/clout_cron?autoReconnect=true&failOverReadOnly=false&maxReconnects=10
read.store.spring.datasource.username=root
read.store.spring.datasource.password=root



write.transaction.spring.datasource.driverClassName=com.mysql.jdbc.Driver
write.transaction.spring.datasource.url=jdbc:mysql://localhost:3306/clout_cron?autoReconnect=true&failOverReadOnly=false&maxReconnects=10
write.transaction.spring.datasource.username=root
write.transaction.spring.datasource.password=root



write.store.spring.datasource.driverClassName=com.mysql.jdbc.Driver
write.store.spring.datasource.url=jdbc:mysql://localhost:3306/clout_cron?autoReconnect=true&failOverReadOnly=false&maxReconnects=10
write.store.spring.datasource.username=root
write.store.spring.datasource.password=root




jobs.spring.datasource.driverClassName=com.mysql.jdbc.Driver
jobs.spring.datasource.url=jdbc:mysql://localhost:3306/clout_cron?autoReconnect=true&failOverReadOnly=false&maxReconnects=10
jobs.spring.datasource.username=root
jobs.spring.datasource.password=root





cron.mongo.db.host=localhost
cron.mongo.db.name=cl
cron.mongo.db.port=27017
cron.mongo.username=
cron.mongo.password=

mongo.db.pool.size=100
mongo.db.pool.maxwait=600000



cache.store.job.grid.size=50
cache.store.job.commit.interval=200



# MatchTransactionJob
transactions.match.job.state.store=insert into transactions_match_jobs (last_processed_key, last_cached_store_key, rejected, matched, new_store, from_cache, success, failed, last_processed_date) values (?,?,?,?,?,?,?,?,?)
cron.job.select.max.job.id=select max(id) from transactions_match_jobs;
cron.job.select.transaction.score.jobs=select * from transactions_match_jobs where id = ?;


# if the transactions_raw id are not sequential then using count to traverse the records can leave the ids larger than the count out of this job run
cron.job.select.transactionsraw.count=select count(id) from transactions_raw where id > ?;
cron.job.select.transactionsraw.maxid=select max(id) from transactions_raw;
cron.job.select.transactionsraw.minid=select min(id) from transactions_raw where id > ? and is_saved = 'N';



transactions.match.job.commit.interval=100
transactions.match.job.grid.size=10


application.urlReadTimeout=20000
application.urlConnectionTimeout=20000





